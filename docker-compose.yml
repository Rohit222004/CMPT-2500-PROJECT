version: '3.8'

services:
  app:
    container_name: cmpt-2500-project-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
      - "8002:8002"  # For Prometheus metrics endpoint
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./predictions:/app/predictions
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5001
    depends_on:
      - mlflow
      - prometheus
    networks:
      - ml-network

  mlflow:
    container_name: cmpt-2500-project-mlflow
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    ports:
      - "5001:5000"
    volumes:
      - ./mlruns:/mlflow/artifacts
      - ./mlflow.db:/mlflow/mlflow.db
      - ./logs:/mlflow/logs
    
    networks:
      - ml-network

  train-metrics:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cmpt-2500-project-train
    command: python src/train.py
    depends_on:
      - mlflow
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
      - ./mlruns:/mlflow/artifacts
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    networks:
      - ml-network

  prometheus:
    image: prom/prometheus:latest
    container_name: cmpt-2500-project-prometheus
    ports:
      - "9090:9090"
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - ml-network

  grafana:
    image: grafana/grafana:latest
    container_name: cmpt-2500-project-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - ml-network

volumes:
  mlflow-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  ml-network:
    driver: bridge
